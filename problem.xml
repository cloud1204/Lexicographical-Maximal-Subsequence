<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="3" short-name="lexicographical-maximal" url="https://polygon.codeforces.com/p7L2es9/Clouder/lexicographical-maximal">
    <names>
        <name language="english" value="最大字典序子序列 (maxlex)"/>
    </names>
    <statements>
        <statement charset="UTF-8" language="english" mathjax="true" path="statements/english/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="english" mathjax="true" path="statements/.html/english/problem.html" type="text/html"/>
    </statements>
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="" run-count="1">
        <testset name="tests">
            <time-limit>3000</time-limit>
            <memory-limit>268435456</memory-limit>
            <test-count>21</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test group="example" method="manual" points="0.0" sample="true"/>
                <test group="example" method="manual" points="0.0" sample="true"/>
                <test cmd="gen --type=random --maxm=1" group="s1" method="generated" points="26.0"/>
                <test cmd="gen --type=random --maxm=1 --cnt=2" group="s1" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=1 --cnt=10" group="s1" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=10 --summ=5000" group="s2" method="generated" points="41.0"/>
                <test cmd="gen --type=random --maxm=5 --summ=5000" group="s2" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=10 --summ=5000 --cnt=5" group="s2" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=10 --summ=5000 --cnt=5 --p=10000000" group="s2" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=10 --summ=5000 --cnt=10 --p=100000000" group="s2" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=10 --summ=5000 --cnt=2 --p=100000000" group="s2" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=20 --summ=5000 --cnt=3 --p=1000000" group="s2" method="generated" points="0.0"/>
                <test cmd="gen --type=tle --summ=5000" group="s3" method="generated" points="33.0"/>
                <test cmd="gen --type=random --maxm=10" group="s3" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=5" group="s3" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=10 --cnt=5" group="s3" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=10 --cnt=5 --p=1000000" group="s3" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=10 --cnt=10 --p=100000" group="s3" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=10 --cnt=2 --p=1000000" group="s3" method="generated" points="0.0"/>
                <test cmd="gen --type=random --maxm=20 --cnt=3 --p=500000" group="s3" method="generated" points="0.0"/>
                <test cmd="gen --type=tle --summ=1000000" group="s3" method="generated" points="0.0"/>
            </tests>
            <groups>
                <group feedback-policy="icpc" name="example" points="0.0" points-policy="complete-group"/>
                <group feedback-policy="icpc" name="s1" points="26.0" points-policy="complete-group"/>
                <group feedback-policy="icpc" name="s2" points="41.0" points-policy="complete-group">
                    <dependencies>
                        <dependency group="example"/>
                    </dependencies>
                </group>
                <group feedback-policy="icpc" name="s3" points="33.0" points-policy="complete-group">
                    <dependencies>
                        <dependency group="example"/>
                        <dependency group="s1"/>
                        <dependency group="s2"/>
                    </dependencies>
                </group>
            </groups>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statements.ftl"/>
            <file path="files/testlib.h" type="h.g++"/>
        </resources>
        <executables>
            <executable>
                <source path="files/gen.cpp" type="cpp.g++17"/>
                <binary path="files/gen.exe" type="exe.win32"/>
            </executable>
            <executable>
                <source path="files/val.cpp" type="cpp.g++17"/>
                <binary path="files/val.exe" type="exe.win32"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker name="std::lcmp.cpp" type="testlib">
            <source path="files/check.cpp" type="cpp.g++17"/>
            <binary path="check.exe" type="exe.win32"/>
            <copy path="check.cpp"/>
            <testset>
                <test-count>0</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests/>
            </testset>
        </checker>
        <validators>
            <validator>
                <source path="files/val.cpp" type="cpp.g++17"/>
                <binary path="files/val.exe" type="exe.win32"/>
                <testset>
                    <test-count>0</test-count>
                    <input-path-pattern>files/tests/validator-tests/%02d</input-path-pattern>
                    <tests/>
                </testset>
            </validator>
        </validators>
        <solutions>
            <solution tag="main">
                <source path="solutions/main.cpp" type="cpp.g++17"/>
                <binary path="solutions/main.exe" type="exe.win32"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>0</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list/>
    </stresses>
    <tags>
        <tag value="2023-ionc"/>
    </tags>
</problem>
